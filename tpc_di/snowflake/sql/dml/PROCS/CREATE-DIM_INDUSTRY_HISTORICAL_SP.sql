CREATE OR REPLACE PROCEDURE TPCDI_WH.PUBLIC.DIM_INDUSTRY_HISTORICAL_SP()
  returns string
  language javascript
  as
  $$
  // Process Dimension Table Updates
  var dim_stmt = snowflake.createStatement(
      {sqlText: "MERGE INTO TPCDI_WH.PUBLIC.DIM_INDUSTRY USING (SELECT IN_ID, IN_NAME, METADATA$ACTION, METADATA$ISUPDATE FROM TPCDI_STG.PUBLIC.INDUSTRY_STG_STM) INDUSTRY_STG ON TPCDI_WH.PUBLIC.DIM_INDUSTRY.IN_ID = INDUSTRY_STG.IN_ID WHEN MATCHED AND INDUSTRY_STG.METADATA$ACTION = 'INSERT' AND INDUSTRY_STG.METADATA$ISUPDATE = 'TRUE' THEN UPDATE SET DIM_INDUSTRY.IN_NAME = INDUSTRY_STG.IN_NAME WHEN NOT MATCHED AND INDUSTRY_STG.METADATA$ACTION = 'INSERT' AND INDUSTRY_STG.METADATA$ISUPDATE = 'FALSE' THEN INSERT (IN_ID, IN_NAME) VALUES (INDUSTRY_STG.IN_ID, INDUSTRY_STG.IN_NAME)"}
    );
  dim_stmt.execute();
  // Log audit record
  var audit_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.AUDIT SELECT 'DIM_INDUSTRY_HISTORICAL_SP', LOCALTIMESTAMP(), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), $1, $2 FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))"}
    );
  audit_stmt.execute();
  return "Dim Industry records processed.";
  $$
;
