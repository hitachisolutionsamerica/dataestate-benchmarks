CREATE OR REPLACE PROCEDURE TPCDI_WH.PUBLIC.DIM_COMPANY_SP()
  returns string
  language javascript
  as
  $$
  // Process Dimension Table
  var stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.DIM_COMPANY SELECT TPCDI_WH.PUBLIC.DIM_COMPANY_SEQ.NEXTVAL, CIK, DIM_STATUS_TYPE.ST_NAME, COMPANY_NAME, DIM_INDUSTRY.IN_NAME, SP_RATING, CASE WHEN (UPPER(SUBSTR(SP_RATING,1,1)) = 'A' OR UPPER(SUBSTR(SP_RATING,1,3)) = 'BBB') THEN 0 ELSE 1 END, CEO_NAME, ADDR_LINE1, ADDR_LINE2, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY, DESCRIPTION, FOUNDING_DATE, (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), LOCALTIMESTAMP()  FROM TPCDI_ODS.PUBLIC.FINWIRE_CMP_ODS_STM INNER JOIN TPCDI_WH.PUBLIC.DIM_STATUS_TYPE ON FINWIRE_CMP_ODS_STM.STATUS = DIM_STATUS_TYPE.ST_ID INNER JOIN TPCDI_WH.PUBLIC.DIM_INDUSTRY ON FINWIRE_CMP_ODS_STM.INDUSTRY_ID = DIM_INDUSTRY.IN_ID WHERE FINWIRE_CMP_ODS_STM.METADATA$ACTION = 'INSERT'"}
      );
  stmt.execute();
  // Log audit record
  var audit_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.AUDIT SELECT 'DIM_COMPANY_SP', LOCALTIMESTAMP(), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), $1, 0 FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))"}
      );
  audit_stmt.execute();
  return 'Dim Company records processed.';
  $$
;
