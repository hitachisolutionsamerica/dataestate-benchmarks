CREATE OR REPLACE PROCEDURE TPCDI_WH.PUBLIC.DIM_TAX_RATE_HISTORICAL_SP()
  returns string
  language javascript
  as
  $$
  // Process Dimension Table Updates
  var dim_stmt = snowflake.createStatement(
      {sqlText: "MERGE INTO TPCDI_WH.PUBLIC.DIM_TAX_RATE USING (SELECT TX_ID, TX_NAME, TX_RATE, METADATA$ACTION, METADATA$ISUPDATE FROM TPCDI_STG.PUBLIC.TAXRATE_STG_STM) TAX_RATE_STG ON TPCDI_WH.PUBLIC.DIM_TAX_RATE.TX_ID = TAX_RATE_STG.TX_ID WHEN MATCHED AND TAX_RATE_STG.METADATA$ACTION = 'INSERT' AND TAX_RATE_STG.METADATA$ISUPDATE = 'TRUE' THEN UPDATE SET DIM_TAX_RATE.TX_NAME = TAX_RATE_STG.TX_NAME, DIM_TAX_RATE.TX_RATE = TAX_RATE_STG.TX_RATE WHEN NOT MATCHED AND TAX_RATE_STG.METADATA$ACTION = 'INSERT' AND TAX_RATE_STG.METADATA$ISUPDATE = 'FALSE' THEN INSERT (TX_ID , TX_NAME , TX_RATE) VALUES (TAX_RATE_STG.TX_ID, TAX_RATE_STG.TX_NAME, TAX_RATE_STG.TX_RATE)"}
    );
  dim_stmt.execute();
  // Log audit record
  var audit_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.AUDIT SELECT 'DIM_TAX_RATE_HISTORICAL_SP', LOCALTIMESTAMP(), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), $1, $2 FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))"}
    );
  audit_stmt.execute();
  return "Dim Tax Rate records processed.";
  $$
;
