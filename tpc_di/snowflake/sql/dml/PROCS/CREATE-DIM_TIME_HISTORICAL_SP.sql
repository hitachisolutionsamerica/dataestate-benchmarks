CREATE OR REPLACE PROCEDURE TPCDI_WH.PUBLIC.DIM_TIME_HISTORICAL_SP()
  returns string
  language javascript
  as
  $$
  // Process Dimension Table Updates
  var dim_stmt = snowflake.createStatement(
      {sqlText: "MERGE INTO TPCDI_WH.PUBLIC.DIM_TIME USING (SELECT SK_TIMEID, TIMEVALUE, HOURID, HOURDESC, MINUTEID, MINUTEDESC, SECONDID, SECONDDESC, MARKETHOURSFLAG, OFFICEHOURSFLAG, METADATA$ACTION, METADATA$ISUPDATE FROM TPCDI_STG.PUBLIC.TIME_STG_STM ) TIME_STG ON TPCDI_WH.PUBLIC.DIM_TIME.TIME_ID = TIME_STG.SK_TIMEID WHEN MATCHED AND TIME_STG.METADATA$ACTION = 'INSERT' AND TIME_STG.METADATA$ISUPDATE = 'TRUE' THEN UPDATE SET DIM_TIME.TIME_VALUE = TIME_STG.TIMEVALUE, DIM_TIME.HOUR_ID = TIME_STG.HOURID, DIM_TIME.HOUR_DESC = TIME_STG.HOURDESC, DIM_TIME.MINUTE_ID = TIME_STG.MINUTEID, DIM_TIME.MINUTE_DESC = TIME_STG.MINUTEDESC, DIM_TIME.SECOND_ID = TIME_STG.SECONDID, DIM_TIME.SECOND_DESC = TIME_STG.SECONDDESC, DIM_TIME.MARKET_HOURS_FLAG = TIME_STG.MARKETHOURSFLAG, DIM_TIME.OFFICE_HOURS_FLAG = TIME_STG.OFFICEHOURSFLAG WHEN NOT MATCHED AND TIME_STG.METADATA$ACTION = 'INSERT' AND TIME_STG.METADATA$ISUPDATE = 'FALSE' THEN INSERT (TIME_ID, TIME_VALUE, HOUR_ID, HOUR_DESC, MINUTE_ID, MINUTE_DESC, SECOND_ID, SECOND_DESC, MARKET_HOURS_FLAG, OFFICE_HOURS_FLAG) VALUES (TIME_STG.SK_TIMEID, TIME_STG.TIMEVALUE, TIME_STG.HOURID, TIME_STG.HOURDESC, TIME_STG.MINUTEID, TIME_STG.MINUTEDESC, TIME_STG.SECONDID, TIME_STG.SECONDDESC, TIME_STG.MARKETHOURSFLAG, TIME_STG.OFFICEHOURSFLAG)"}
    );
  dim_stmt.execute();
  // Log audit record
  var audit_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.AUDIT SELECT 'DIM_TIME_HISTORICAL_SP', LOCALTIMESTAMP(), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), $1, $2 FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))"}
    );
  audit_stmt.execute();
  return "Dim Time records processed.";
  $$
;