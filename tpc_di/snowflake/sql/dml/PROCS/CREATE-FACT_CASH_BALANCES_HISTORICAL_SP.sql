CREATE OR REPLACE PROCEDURE TPCDI_WH.PUBLIC.FACT_CASH_BALANCES_HISTORICAL_SP()
  returns string
  language javascript
  as
  $$
  // Suspend Parent Task
  var ptask_stmt = snowflake.createStatement(
      {sqlText: "ALTER TASK TPCDI_WH.PUBLIC.DIM_ACCOUNT_HISTORICAL_TSK SUSPEND"}
      );
  ptask_stmt.execute();
  // Process Transactions
  var fact_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.FACT_CASH_BALANCES SELECT DIM_ACCOUNT_NOW.SK_CUSTOMER_ID, DIM_ACCOUNT_NOW.SK_ACCOUNT_ID, DIM_DATE.DATE_ID, SUM(CASHTRANSACTION_STG_STM.CT_AMT) OVER (PARTITION BY DIM_ACCOUNT_NOW.SK_ACCOUNT_ID ORDER BY DIM_DATE.DATE_ID ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH) FROM TPCDI_STG.PUBLIC.CASHTRANSACTION_STG_STM INNER JOIN TPCDI_WH.PUBLIC.DIM_ACCOUNT_NOW ON CASHTRANSACTION_STG_STM.CT_CA_ID = DIM_ACCOUNT_NOW.ACCOUNT_ID INNER JOIN TPCDI_WH.PUBLIC.DIM_DATE ON TO_DATE(CASHTRANSACTION_STG_STM.CT_DTS) = TO_DATE(DIM_DATE.DATE_VALUE) ORDER BY 3 ASC"}
      );
  fact_stmt.execute();
  // Log audit record
  var audit_stmt = snowflake.createStatement(
      {sqlText: "INSERT INTO TPCDI_WH.PUBLIC.AUDIT SELECT 'FACT_CASH_BALANCES_HISTORICAL_SP', LOCALTIMESTAMP(), (SELECT MAX(BATCH_ID) FROM TPCDI_WH.PUBLIC.CTRL_BATCH), $1, 0 FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))"}
      );
  audit_stmt.execute();
  // Stop Task
  var task_stmt = snowflake.createStatement(
      {sqlText: "ALTER TASK TPCDI_WH.PUBLIC.FACT_CASH_BALANCES_HISTORICAL_TSK SUSPEND"}
      );
  task_stmt.execute();
  return 'Fact Cash Balances transactions inserted.';
  $$
;  
