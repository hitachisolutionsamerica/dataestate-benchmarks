-- INCREMENTAL LOAD

-- ALTER SESSION TO SET PARAMETER TO ALLOW MULTIPLE INSTANCES OF SAME BUSINESS ID FOR UPDATES IN STAGE
ALTER SESSION SET ERROR_ON_NONDETERMINISTIC_MERGE = FALSE;

-- MERGE RECORDS FROM STAGE
MERGE INTO TPCDI_WH.PUBLIC.DIM_COMPANY USING
    (
	  SELECT
			 CIK COMPANY_ID 
		   , STATUSTYPE_STG.ST_NAME STATUS
		   , COMPANY_NAME NAME 
		   , INDUSTRY_STG.IN_NAME INDUSTRY
		   , SP_RATING SP_RATING
		   , CASE WHEN (UPPER(SUBSTR(SP_RATING,1,1)) = 'A' OR UPPER(SUBSTR(SP_RATING,1,3)) = 'BBB') THEN 0 ELSE 1 END IS_LOW_GRADE
		   , CEO_NAME CEO 
		   , ADDR_LINE1 ADDRESS_LINE1
		   , ADDR_LINE2 ADDRESS_LINE2
		   , POSTAL_CODE POSTAL_CODE
		   , CITY CITY
		   , STATE_PROVINCE STATE_PROV
		   , COUNTRY COUNTRY
		   , DESCRIPTION DESCRIPTION
		   , FOUNDING_DATE FOUNDING_DATE
		   , TO_NUMBER(1) IS_CURRENT
		   , TO_NUMBER(1) BATCH_ID
		   , EFFECTIVE_DATE.EFFECTIVE_DATE EFFECTIVE_DATE
		   , TO_DATE('12/31/9999','MM/DD/YYYY') END_DATE
	  FROM TPCDI_STG.PUBLIC.FINWIRE_CMP_STG
	  JOIN 
		  (SELECT
			  MIN(DATE_VALUE) EFFECTIVE_DATE
		   FROM TPCDI_WH.PUBLIC.DIM_DATE) EFFECTIVE_DATE ON
		  1 = 1
	  LEFT JOIN TPCDI_STG.PUBLIC.STATUSTYPE_STG ON
		  FINWIRE_CMP_STG.STATUS = STATUSTYPE_STG.ST_ID
	  LEFT JOIN TPCDI_STG.PUBLIC.INDUSTRY_STG ON
		  FINWIRE_CMP_STG.INDUSTRY_ID = INDUSTRY_STG.IN_ID
    ) COMPANY_UPDATES ON DIM_COMPANY.COMPANY_ID = COMPANY_UPDATES.COMPANY_ID
WHEN MATCHED THEN UPDATE SET
    DIM_COMPANY.STATUS = COALESCE(COMPANY_UPDATES.STATUS,DIM_COMPANY.STATUS),
    DIM_COMPANY.NAME = COALESCE(COMPANY_UPDATES.NAME,DIM_COMPANY.NAME),
    DIM_COMPANY.INDUSTRY = COALESCE(COMPANY_UPDATES.INDUSTRY,DIM_COMPANY.INDUSTRY),
    DIM_COMPANY.SP_RATING = COALESCE(COMPANY_UPDATES.SP_RATING,DIM_COMPANY.SP_RATING),
    DIM_COMPANY.IS_LOW_GRADE = COALESCE(COMPANY_UPDATES.IS_LOW_GRADE,DIM_COMPANY.IS_LOW_GRADE),
    DIM_COMPANY.CEO = COALESCE(COMPANY_UPDATES.CEO,DIM_COMPANY.CEO),
    DIM_COMPANY.ADDRESS_LINE1 = COALESCE(COMPANY_UPDATES.ADDRESS_LINE1,DIM_COMPANY.ADDRESS_LINE1),
    DIM_COMPANY.ADDRESS_LINE2 = COALESCE(COMPANY_UPDATES.ADDRESS_LINE2,DIM_COMPANY.ADDRESS_LINE2),
    DIM_COMPANY.POSTAL_CODE = COALESCE(COMPANY_UPDATES.POSTAL_CODE,DIM_COMPANY.POSTAL_CODE),
    DIM_COMPANY.CITY = COALESCE(COMPANY_UPDATES.CITY,DIM_COMPANY.CITY),
    DIM_COMPANY.STATE_PROV = COALESCE(COMPANY_UPDATES.STATE_PROV,DIM_COMPANY.STATE_PROV),
    DIM_COMPANY.COUNTRY = COALESCE(COMPANY_UPDATES.COUNTRY,DIM_COMPANY.COUNTRY),
    DIM_COMPANY.DESCRIPTION = COALESCE(COMPANY_UPDATES.DESCRIPTION,DIM_COMPANY.DESCRIPTION),
    DIM_COMPANY.FOUNDING_DATE = COALESCE(COMPANY_UPDATES.FOUNDING_DATE,DIM_COMPANY.FOUNDING_DATE),
    DIM_COMPANY.IS_CURRENT = COALESCE(COMPANY_UPDATES.IS_CURRENT,DIM_COMPANY.IS_CURRENT),
    DIM_COMPANY.BATCH_ID = COALESCE(COMPANY_UPDATES.BATCH_ID,DIM_COMPANY.BATCH_ID),
    DIM_COMPANY.EFFECTIVE_DATE = COALESCE(COMPANY_UPDATES.EFFECTIVE_DATE,DIM_COMPANY.EFFECTIVE_DATE),
    DIM_COMPANY.END_DATE = COALESCE(COMPANY_UPDATES.END_DATE,DIM_COMPANY.END_DATE)
WHEN NOT MATCHED THEN INSERT
    ( SK_COMPANY_ID,
	  COMPANY_ID,
	  STATUS,
	  NAME,
	  INDUSTRY,
	  SP_RATING,
	  IS_LOW_GRADE,
	  CEO,
	  ADDRESS_LINE1,
	  ADDRESS_LINE2,
	  POSTAL_CODE,
	  CITY,
	  STATE_PROV,
	  COUNTRY,
	  DESCRIPTION,
	  FOUNDING_DATE,
	  IS_CURRENT,
	  BATCH_ID,
	  EFFECTIVE_DATE,
	  END_DATE )
VALUES
    ( TPCDI_WH.PUBLIC.DIM_COMPANY_SEQ.NEXTVAL,
	  COMPANY_UPDATES.COMPANY_ID,
	  COMPANY_UPDATES.STATUS,
	  COMPANY_UPDATES.NAME,
	  COMPANY_UPDATES.INDUSTRY,
	  COMPANY_UPDATES.SP_RATING,
	  COMPANY_UPDATES.IS_LOW_GRADE,
	  COMPANY_UPDATES.CEO,
	  COMPANY_UPDATES.ADDRESS_LINE1,
	  COMPANY_UPDATES.ADDRESS_LINE2,
	  COMPANY_UPDATES.POSTAL_CODE,
	  COMPANY_UPDATES.CITY,
	  COMPANY_UPDATES.STATE_PROV,
	  COMPANY_UPDATES.COUNTRY,
	  COMPANY_UPDATES.DESCRIPTION,
	  COMPANY_UPDATES.FOUNDING_DATE,
	  COMPANY_UPDATES.IS_CURRENT,
	  COMPANY_UPDATES.BATCH_ID,
	  COMPANY_UPDATES.EFFECTIVE_DATE,
	  COMPANY_UPDATES.END_DATE
    )
;