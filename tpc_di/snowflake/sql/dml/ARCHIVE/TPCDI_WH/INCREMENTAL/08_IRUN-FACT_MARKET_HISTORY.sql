-- INCREMENTAL LOAD

-- ALTER SESSION TO SET PARAMETER TO ALLOW MULTIPLE INSTANCES OF SAME BUSINESS ID FOR UPDATES IN STAGE
ALTER SESSION SET ERROR_ON_NONDETERMINISTIC_MERGE = FALSE;

-- MERGE RECORDS FROM STAGE
MERGE INTO TPCDI_WH.PUBLIC.FACT_MARKET_HISTORY USING
    (
  SELECT
       DIM_SECURITY.SK_SECURITY_ID SK_SECURITY_ID
     , DIM_SECURITY.SK_COMPANY_ID SK_COMPANY_ID
     , DIM_DATE.DATE_ID SK_DATE_ID
     , ROUND(COALESCE(DIM_SECURITY.DIVIDEND,0,0,DM_CLOSE / DIM_SECURITY.DIVIDEND),2) PE_RATIO
     , ROUND(COALESCE(DM_CLOSE,0,0,DIM_SECURITY.DIVIDEND / DM_CLOSE) * 100  / 10000 ,2) YIELD 
     , MAX(DM_HIGH) OVER (PARTITION BY DIM_SECURITY.SK_SECURITY_ID) FIFTY_TWO_WEEK_HIGH
     , MAX(DIM_DATE.DATE_ID) OVER (PARTITION BY DIM_SECURITY.SK_SECURITY_ID) SK_FIFTY_TWO_WEEK_HIGH_DATE
     , MIN(DM_LOW) OVER (PARTITION BY DIM_SECURITY.SK_SECURITY_ID)FIFTY_TWO_WEEK_LOW
     , MIN(DIM_DATE.DATE_ID) OVER (PARTITION BY DIM_SECURITY.SK_SECURITY_ID) SK_FIFTY_TWO_WEEK_LOW_DATE
     , DM_CLOSE CLOSE_PRICE
     , DM_HIGH DAY_HIGH
     , DM_LOW DAY_LOW
     , DM_VOL VOLUME
     , TO_NUMBER(1) BATCH_ID
  FROM TPCDI_STG.PUBLIC.DAILYMARKET_STG
LEFT JOIN TPCDI_WH.PUBLIC.DIM_SECURITY ON
      DAILYMARKET_STG.DM_S_SYMB = DIM_SECURITY.SYMBOL
LEFT JOIN TPCDI_WH.PUBLIC.DIM_DATE ON
      TO_DATE(DAILYMARKET_STG.DM_DATE) = TO_DATE(DIM_DATE.DATE_VALUE)
    ) MARKET_HISTORY_UPDATES ON FACT_MARKET_HISTORY.SK_SECURITY_ID = MARKET_HISTORY_UPDATES.SK_SECURITY_ID AND FACT_MARKET_HISTORY.SK_DATE_ID = MARKET_HISTORY_UPDATES.SK_DATE_ID
WHEN MATCHED THEN UPDATE SET
    FACT_MARKET_HISTORY.SK_SECURITY_ID = COALESCE(MARKET_HISTORY_UPDATES.SK_SECURITY_ID,FACT_MARKET_HISTORY.SK_SECURITY_ID),
    FACT_MARKET_HISTORY.SK_COMPANY_ID = COALESCE(MARKET_HISTORY_UPDATES.SK_COMPANY_ID,FACT_MARKET_HISTORY.SK_COMPANY_ID),
    FACT_MARKET_HISTORY.SK_DATE_ID = COALESCE(MARKET_HISTORY_UPDATES.SK_DATE_ID,FACT_MARKET_HISTORY.SK_DATE_ID),
    FACT_MARKET_HISTORY.PE_RATIO = COALESCE(MARKET_HISTORY_UPDATES.PE_RATIO,FACT_MARKET_HISTORY.PE_RATIO),
    FACT_MARKET_HISTORY.YIELD = COALESCE(MARKET_HISTORY_UPDATES.YIELD,FACT_MARKET_HISTORY.YIELD),
    FACT_MARKET_HISTORY.FIFTY_TWO_WEEK_HIGH = COALESCE(MARKET_HISTORY_UPDATES.FIFTY_TWO_WEEK_HIGH,FACT_MARKET_HISTORY.FIFTY_TWO_WEEK_HIGH),
    FACT_MARKET_HISTORY.SK_FIFTY_TWO_WEEK_HIGH_DATE = COALESCE(MARKET_HISTORY_UPDATES.SK_FIFTY_TWO_WEEK_HIGH_DATE,FACT_MARKET_HISTORY.SK_FIFTY_TWO_WEEK_HIGH_DATE),
    FACT_MARKET_HISTORY.FIFTY_TWO_WEEK_LOW = COALESCE(MARKET_HISTORY_UPDATES.FIFTY_TWO_WEEK_LOW,FACT_MARKET_HISTORY.FIFTY_TWO_WEEK_LOW),
    FACT_MARKET_HISTORY.CLOSE_PRICE = COALESCE(MARKET_HISTORY_UPDATES.CLOSE_PRICE,FACT_MARKET_HISTORY.CLOSE_PRICE),
    FACT_MARKET_HISTORY.DAY_HIGH = COALESCE(MARKET_HISTORY_UPDATES.DAY_HIGH,FACT_MARKET_HISTORY.DAY_HIGH),
    FACT_MARKET_HISTORY.DAY_LOW = COALESCE(MARKET_HISTORY_UPDATES.DAY_LOW,FACT_MARKET_HISTORY.DAY_LOW),
    FACT_MARKET_HISTORY.VOLUME = COALESCE(MARKET_HISTORY_UPDATES.VOLUME,FACT_MARKET_HISTORY.VOLUME),
    FACT_MARKET_HISTORY.BATCH_ID = COALESCE(MARKET_HISTORY_UPDATES.BATCH_ID,FACT_MARKET_HISTORY.BATCH_ID)
WHEN NOT MATCHED THEN INSERT
    ( 
      SK_SECURITY_ID,
      SK_COMPANY_ID,
      SK_DATE_ID,
      PE_RATIO,
      YIELD,
      FIFTY_TWO_WEEK_HIGH,
      SK_FIFTY_TWO_WEEK_HIGH_DATE,
      FIFTY_TWO_WEEK_LOW,
      SK_FIFTY_TWO_WEEK_LOW_DATE,
      CLOSE_PRICE,
      DAY_HIGH,
      DAY_LOW,
      VOLUME,
      BATCH_ID 
    )
VALUES
    ( 
      MARKET_HISTORY_UPDATES.SK_SECURITY_ID,
      MARKET_HISTORY_UPDATES.SK_COMPANY_ID,
      MARKET_HISTORY_UPDATES.SK_DATE_ID,
      MARKET_HISTORY_UPDATES.PE_RATIO,
      MARKET_HISTORY_UPDATES.YIELD,
      MARKET_HISTORY_UPDATES.FIFTY_TWO_WEEK_HIGH,
      MARKET_HISTORY_UPDATES.SK_FIFTY_TWO_WEEK_HIGH_DATE,
      MARKET_HISTORY_UPDATES.FIFTY_TWO_WEEK_LOW,
      MARKET_HISTORY_UPDATES.SK_FIFTY_TWO_WEEK_LOW_DATE,
      MARKET_HISTORY_UPDATES.CLOSE_PRICE,
      MARKET_HISTORY_UPDATES.DAY_HIGH,
      MARKET_HISTORY_UPDATES.DAY_LOW,
      MARKET_HISTORY_UPDATES.VOLUME,
      MARKET_HISTORY_UPDATES.BATCH_ID
    )
;