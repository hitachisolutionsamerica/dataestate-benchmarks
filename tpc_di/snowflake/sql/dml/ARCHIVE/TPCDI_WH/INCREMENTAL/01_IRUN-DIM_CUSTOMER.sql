-- INCREMENTAL LOAD

-- ALTER SESSION TO SET PARAMETER TO ALLOW MULTIPLE INSTANCES OF SAME BUSINESS ID FOR UPDATES IN STAGE
ALTER SESSION SET ERROR_ON_NONDETERMINISTIC_MERGE = FALSE;

-- MERGE RECORDS FROM STAGE
MERGE INTO TPCDI_WH.PUBLIC.DIM_CUSTOMER USING
    (
      SELECT
          C_ID CUSTOMER_ID, 
          C_TAX_ID TAX_ID, 
          STATUSTYPE_STG.ST_NAME STATUS,
          C_L_NAME LAST_NAME, 
          C_F_NAME FIRST_NAME, 
          C_M_NAME MIDDLE_NAME,
          DECODE(UPPER(C_GNDR),'M','M','F','F','U') GENDER,
          C_TIER TIER, 
          C_DOB DOB,
          C_ADLINE1 ADDRESS_LINE_1,
          C_ADLINE2 ADDRESS_LINE_2,
          C_ZIPCODE POSTAL_CODE,
          C_CITY CITY,
          C_STATE_PROV STATE_PROV,
          C_CTRY COUNTRY,
          CASE WHEN C_CTRY_1 IS NOT NULL AND C_AREA_1 IS NOT NULL AND C_LOCAL_1 IS NOT NULL THEN '+ '||/* COUNTRY CODE 1*/ C_CTRY_1||' ('||/* AREA CODE 1*/ C_AREA_1||') '||/* PHONE NUMBER 1*/ C_LOCAL_1||DECODE(C_EXT_1,TO_CHAR(NULL),' EXT. '||C_EXT_1)
               WHEN C_CTRY_1 IS NULL AND C_AREA_1 IS NOT NULL AND C_LOCAL_1 IS NOT NULL THEN ' ('||/* AREA CODE 1*/ C_AREA_1||') '||/* PHONE NUMBER 1*/ C_LOCAL_1||DECODE(C_EXT_1,TO_CHAR(NULL),' EXT. '||C_EXT_1)
               WHEN C_CTRY_1 IS NULL AND C_AREA_1 IS NULL AND C_LOCAL_1 IS NOT NULL THEN /* PHONE NUMBER 1*/ C_LOCAL_1||DECODE(C_EXT_1,TO_CHAR(NULL),' EXT. '||C_EXT_1)
               ELSE TO_CHAR(NULL) END PHONE1,
          CASE WHEN C_CTRY_2 IS NOT NULL AND C_AREA_2 IS NOT NULL AND C_LOCAL_2 IS NOT NULL THEN '+ '||/* COUNTRY CODE 2*/ C_CTRY_2||' ('||/* AREA CODE 2*/ C_AREA_2||') '||/* PHONE NUMBER 2*/ C_LOCAL_2||DECODE(C_EXT_2,TO_CHAR(NULL),' EXT. '||C_EXT_2)
               WHEN C_CTRY_2 IS NULL AND C_AREA_2 IS NOT NULL AND C_LOCAL_2 IS NOT NULL THEN ' ('||/* AREA CODE 2*/ C_AREA_2||') '||/* PHONE NUMBER 2*/ C_LOCAL_2||DECODE(C_EXT_2,TO_CHAR(NULL),' EXT. '||C_EXT_2)
               WHEN C_CTRY_2 IS NULL AND C_AREA_2 IS NULL AND C_LOCAL_2 IS NOT NULL THEN /* PHONE NUMBER 2*/ C_LOCAL_2||DECODE(C_EXT_2,TO_CHAR(NULL),' EXT. '||C_EXT_2)
               ELSE TO_CHAR(NULL) END PHONE2,
          CASE WHEN C_CTRY_3 IS NOT NULL AND C_AREA_3 IS NOT NULL AND C_LOCAL_3 IS NOT NULL THEN '+ '||/* COUNTRY CODE 3*/ C_CTRY_3||' ('||/* AREA CODE 3*/ C_AREA_3||') '||/* PHONE NUMBER 3*/ C_LOCAL_3||DECODE(C_EXT_3,TO_CHAR(NULL),' EXT. '||C_EXT_3)
               WHEN C_CTRY_3 IS NULL AND C_AREA_3 IS NOT NULL AND C_LOCAL_3 IS NOT NULL THEN ' ('||/* AREA CODE 3*/ C_AREA_3||') '||/* PHONE NUMBER 3*/ C_LOCAL_3||DECODE(C_EXT_3,TO_CHAR(NULL),' EXT. '||C_EXT_3)
               WHEN C_CTRY_3 IS NULL AND C_AREA_3 IS NULL AND C_LOCAL_3 IS NOT NULL THEN /* PHONE NUMBER 3*/ C_LOCAL_3||DECODE(C_EXT_3,TO_CHAR(NULL),' EXT. '||C_EXT_3)
               ELSE TO_CHAR(NULL) END PHONE3,
          C_EMAIL_1 EMAIL1, 
          C_EMAIL_2 EMAIL2,
          NAT_TAX_RATE.TX_NAME NATIONAL_TAX_RATE_DESC,
          NAT_TAX_RATE.TX_RATE NATIONAL_TAX_RATE,
          LOC_TAX_RATE.TX_NAME LOCAL_TAX_RATE_DESC,
          LOC_TAX_RATE.TX_RATE LOCAL_TAX_RATE,
          PROSPECT_STG.AGENCYID AGENCY_ID,
          PROSPECT_STG.CREDITRATING CREDIT_RATING,
          PROSPECT_STG.NETWORTH NET_WORTH,
          -- MARKETING_NAMEPLATE LOGIC NEEDS REVISING AS IT IS NOT ACCURATE AS CODED  
          TRIM(REPLACE(CASE WHEN (PROSPECT_STG.NETWORTH > 1000000 OR PROSPECT_STG.INCOME > 200000) THEN 'HIGHVALUE' ELSE '-NOVALUE-' END 
                            ||
                       CASE WHEN (PROSPECT_STG.NUMBERCHILDREN > 3 OR PROSPECT_STG.NUMBERCREDITCARDS > 5) THEN '+EXPENSES' ELSE '-NOVALUE-' END      
                            ||
                       CASE WHEN (PROSPECT_STG.AGE > 45) THEN '+BOOMER' ELSE '-NOVALUE-' END                                                        
                            ||      
                       CASE WHEN (PROSPECT_STG.INCOME < 50000 OR PROSPECT_STG.CREDITRATING < 600 OR PROSPECT_STG.NETWORTH < 100000) THEN '+MONEYALERT' ELSE '-NOVALUE-' END                                                        
                            ||      
                       CASE WHEN (PROSPECT_STG.NUMBERCARS > 3 OR PROSPECT_STG.NUMBERCREDITCARDS > 7) THEN '+SPENDER' ELSE '-NOVALUE-' END                                                        
                            ||
                       CASE WHEN (PROSPECT_STG.AGE < 25 AND PROSPECT_STG.NETWORTH > 1000000) THEN '+INHERITED' ELSE '-NOVALUE-' END                                                      
                       ,'-NOVALUE-'),'+') MARKETING_NAMEPLATE,
          TO_NUMBER(1) IS_CURRENT,
          TO_NUMBER(2) BATCH_ID,
          EFFECTIVE_DATE.EFFECTIVE_DATE,
          TO_DATE('12/31/9999','MM/DD/YYYY') END_DATE
      FROM TPCDI_STG.PUBLIC.CUSTOMER_STG
      JOIN 
          (SELECT
              MIN(DATE_VALUE) EFFECTIVE_DATE
           FROM TPCDI_WH.PUBLIC.DIM_DATE) EFFECTIVE_DATE ON
          1 = 1
      LEFT JOIN TPCDI_STG.PUBLIC.STATUSTYPE_STG ON
          CUSTOMER_STG.C_ST_ID = STATUSTYPE_STG.ST_ID
      LEFT JOIN TPCDI_STG.PUBLIC.TAXRATE_STG NAT_TAX_RATE ON
          C_NAT_TX_ID = NAT_TAX_RATE.TX_ID
      LEFT JOIN TPCDI_STG.PUBLIC.TAXRATE_STG LOC_TAX_RATE ON
          C_LCL_TX_ID = LOC_TAX_RATE.TX_ID
      LEFT JOIN TPCDI_STG.PUBLIC.PROSPECT_STG ON
            /* LAST NAME */ UPPER(C_L_NAME) = UPPER(PROSPECT_STG.LASTNAME) AND
            /* FIRST NAME */ UPPER(C_F_NAME) = UPPER(PROSPECT_STG.FIRSTNAME) AND
            /* ADDRESSLINE1, */ UPPER(C_ADLINE1) = UPPER(PROSPECT_STG.ADDRESSLINE1) AND
            /* ADDRESSLINE2 */ UPPER(C_ADLINE2) = UPPER(PROSPECT_STG.ADDRESSLINE2) AND
            /* POSTALCODE */ UPPER(C_ZIPCODE) = UPPER(PROSPECT_STG.POSTALCODE)
    ) CUSTOMER_UPDATES ON DIM_CUSTOMER.CUSTOMER_ID = CUSTOMER_UPDATES.CUSTOMER_ID
WHEN MATCHED THEN UPDATE SET
    DIM_CUSTOMER.TAX_ID = COALESCE(CUSTOMER_UPDATES.TAX_ID,DIM_CUSTOMER.TAX_ID),
    DIM_CUSTOMER.STATUS = COALESCE(CUSTOMER_UPDATES.STATUS,DIM_CUSTOMER.STATUS),
    DIM_CUSTOMER.LAST_NAME = COALESCE(CUSTOMER_UPDATES.LAST_NAME,DIM_CUSTOMER.LAST_NAME),
    DIM_CUSTOMER.FIRST_NAME = COALESCE(CUSTOMER_UPDATES.FIRST_NAME,DIM_CUSTOMER.FIRST_NAME),
    DIM_CUSTOMER.MIDDLE_INITIAL = COALESCE(CUSTOMER_UPDATES.MIDDLE_NAME,DIM_CUSTOMER.MIDDLE_INITIAL),
    DIM_CUSTOMER.GENDER = COALESCE(CUSTOMER_UPDATES.GENDER,DIM_CUSTOMER.GENDER),
    DIM_CUSTOMER.TIER = COALESCE(CUSTOMER_UPDATES.TIER,DIM_CUSTOMER.TIER),
    DIM_CUSTOMER.DOB = COALESCE(CUSTOMER_UPDATES.DOB,DIM_CUSTOMER.DOB),
    DIM_CUSTOMER.ADDRESS_LINE_1 = COALESCE(CUSTOMER_UPDATES.ADDRESS_LINE_1,DIM_CUSTOMER.ADDRESS_LINE_1),
    DIM_CUSTOMER.ADDRESS_LINE_2 = COALESCE(CUSTOMER_UPDATES.ADDRESS_LINE_2,DIM_CUSTOMER.ADDRESS_LINE_2),
    DIM_CUSTOMER.POSTAL_CODE = COALESCE(CUSTOMER_UPDATES.POSTAL_CODE,DIM_CUSTOMER.POSTAL_CODE),
    DIM_CUSTOMER.CITY = COALESCE(CUSTOMER_UPDATES.CITY,DIM_CUSTOMER.CITY),
    DIM_CUSTOMER.STATE_PROV = COALESCE(CUSTOMER_UPDATES.STATE_PROV,DIM_CUSTOMER.STATE_PROV),
    DIM_CUSTOMER.COUNTRY = COALESCE(CUSTOMER_UPDATES.COUNTRY,DIM_CUSTOMER.COUNTRY),
    DIM_CUSTOMER.PHONE1 = COALESCE(CUSTOMER_UPDATES.PHONE1,DIM_CUSTOMER.PHONE1),
    DIM_CUSTOMER.PHONE2 = COALESCE(CUSTOMER_UPDATES.PHONE2,DIM_CUSTOMER.PHONE2),
    DIM_CUSTOMER.PHONE3 = COALESCE(CUSTOMER_UPDATES.PHONE3,DIM_CUSTOMER.PHONE3),
    DIM_CUSTOMER.EMAIL1 = COALESCE(CUSTOMER_UPDATES.EMAIL1,DIM_CUSTOMER.EMAIL1),
    DIM_CUSTOMER.EMAIL2 = COALESCE(CUSTOMER_UPDATES.EMAIL2,DIM_CUSTOMER.EMAIL2),
    DIM_CUSTOMER.NATIONAL_TAX_RATE_DESC = COALESCE(CUSTOMER_UPDATES.NATIONAL_TAX_RATE_DESC,DIM_CUSTOMER.NATIONAL_TAX_RATE_DESC),
    DIM_CUSTOMER.NATIONAL_TAX_RATE = COALESCE(CUSTOMER_UPDATES.NATIONAL_TAX_RATE,DIM_CUSTOMER.NATIONAL_TAX_RATE),
    DIM_CUSTOMER.LOCAL_TAX_RATE_DESC = COALESCE(CUSTOMER_UPDATES.LOCAL_TAX_RATE_DESC,DIM_CUSTOMER.LOCAL_TAX_RATE_DESC),
    DIM_CUSTOMER.LOCAL_TAX_RATE = COALESCE(CUSTOMER_UPDATES.LOCAL_TAX_RATE,DIM_CUSTOMER.LOCAL_TAX_RATE),
    DIM_CUSTOMER.AGENCY_ID = COALESCE(CUSTOMER_UPDATES.AGENCY_ID,DIM_CUSTOMER.AGENCY_ID),
    DIM_CUSTOMER.CREDIT_RATING = COALESCE(CUSTOMER_UPDATES.CREDIT_RATING,DIM_CUSTOMER.CREDIT_RATING),
    DIM_CUSTOMER.NET_WORTH = COALESCE(CUSTOMER_UPDATES.NET_WORTH,DIM_CUSTOMER.NET_WORTH),
    DIM_CUSTOMER.MARKETING_NAMEPLATE = COALESCE(CUSTOMER_UPDATES.MARKETING_NAMEPLATE,DIM_CUSTOMER.MARKETING_NAMEPLATE),
    DIM_CUSTOMER.IS_CURRENT = COALESCE(CUSTOMER_UPDATES.IS_CURRENT,DIM_CUSTOMER.IS_CURRENT),
    DIM_CUSTOMER.BATCH_ID = COALESCE(CUSTOMER_UPDATES.BATCH_ID,DIM_CUSTOMER.BATCH_ID),
    DIM_CUSTOMER.EFFECTIVE_DATE = COALESCE(CUSTOMER_UPDATES.EFFECTIVE_DATE,DIM_CUSTOMER.EFFECTIVE_DATE),
    DIM_CUSTOMER.END_DATE = COALESCE(CUSTOMER_UPDATES.END_DATE,DIM_CUSTOMER.END_DATE)
WHEN NOT MATCHED THEN INSERT
    ( SK_CUSTOMER_ID,
      CUSTOMER_ID,
      TAX_ID,
      STATUS,
      LAST_NAME,
      FIRST_NAME,
      MIDDLE_INITIAL,
      GENDER,
      TIER,
      DOB,
      ADDRESS_LINE_1,
      ADDRESS_LINE_2,
      POSTAL_CODE,
      CITY,
      STATE_PROV,
      COUNTRY,
      PHONE1,
      PHONE2,
      PHONE3,
      EMAIL1,
      EMAIL2,
      NATIONAL_TAX_RATE_DESC,
      NATIONAL_TAX_RATE,
      LOCAL_TAX_RATE_DESC,
      LOCAL_TAX_RATE,
      AGENCY_ID,
      CREDIT_RATING,
      NET_WORTH,
      MARKETING_NAMEPLATE,
      IS_CURRENT,
      BATCH_ID,
      EFFECTIVE_DATE,
      END_DATE )
VALUES
    ( TPCDI_WH.PUBLIC.DIM_CUSTOMER_SEQ.NEXTVAL,
      CUSTOMER_UPDATES.CUSTOMER_ID,
      CUSTOMER_UPDATES.TAX_ID,
      CUSTOMER_UPDATES.STATUS,
      CUSTOMER_UPDATES.LAST_NAME,
      CUSTOMER_UPDATES.FIRST_NAME,
      CUSTOMER_UPDATES.MIDDLE_NAME,
      CUSTOMER_UPDATES.GENDER,
      CUSTOMER_UPDATES.TIER,
      CUSTOMER_UPDATES.DOB,
      CUSTOMER_UPDATES.ADDRESS_LINE_1,
      CUSTOMER_UPDATES.ADDRESS_LINE_2,
      CUSTOMER_UPDATES.POSTAL_CODE,
      CUSTOMER_UPDATES.CITY,
      CUSTOMER_UPDATES.STATE_PROV,
      CUSTOMER_UPDATES.COUNTRY,
      CUSTOMER_UPDATES.PHONE1,
      CUSTOMER_UPDATES.PHONE2,
      CUSTOMER_UPDATES.PHONE3,
      CUSTOMER_UPDATES.EMAIL1,
      CUSTOMER_UPDATES.EMAIL2,
      CUSTOMER_UPDATES.NATIONAL_TAX_RATE_DESC,
      CUSTOMER_UPDATES.NATIONAL_TAX_RATE,
      CUSTOMER_UPDATES.LOCAL_TAX_RATE_DESC,
      CUSTOMER_UPDATES.LOCAL_TAX_RATE,
      CUSTOMER_UPDATES.AGENCY_ID,
      CUSTOMER_UPDATES.CREDIT_RATING,
      CUSTOMER_UPDATES.NET_WORTH,
      CUSTOMER_UPDATES.MARKETING_NAMEPLATE,
      CUSTOMER_UPDATES.IS_CURRENT,
      CUSTOMER_UPDATES.BATCH_ID,
      CUSTOMER_UPDATES.EFFECTIVE_DATE,
      CUSTOMER_UPDATES.END_DATE
    )
;