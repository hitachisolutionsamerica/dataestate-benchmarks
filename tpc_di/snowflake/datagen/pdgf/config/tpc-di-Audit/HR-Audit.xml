<!--
/*******************************************************************************
 * Copyright (c) 2013, bankmark and/or its affiliates. All rights reserved. 
 * bankmark UG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 ******************************************************************************/
-->
<include>
    <output name="StatisticsOutput" active="${AuditingAndReportingSystemActive}">	
		<size>2</size><!-- number of used counters -->
		<fileTemplate>outputDir + "Batch" + (updateID + 1) + "/" + table.getName() +"_audit"+ fileEnding</fileTemplate>
		<outputDir>output/</outputDir>
		<fileEnding>.csv</fileEnding>
		<delimiter>,</delimiter>
		<header><!--"DataSet, BatchID ,Date , Attribute , Value, DValue" + pdgf.util.Constants.DEFAULT_LINESEPARATOR--></header>
		<footer></footer>
				
		<tableChangedEventTemplate><!-- 
			    int batchID=updateID + 1;
			    
				//reset counters at statistics file change
				for ( int i = 0 ; i < counter.length; i++) {
					counter[i].set(0L);
				}
				
				keyValueStore.put("batchID", Integer.valueOf(batchID));
				
		-->
		</tableChangedEventTemplate>
		
		<!-- Format the collected counter statistics -->
		<formaterTemplate><!--
		int batchID=((Integer)keyValueStore.get("batchID")).intValue();
		
		//Broker,1,null,HR_BROKERS,v,null
		        buf.append("DimBroker");
		        buf.append(delimiter);
		        buf.append("1");
		        buf.append(delimiter);
		        buf.append("");
		        buf.append(delimiter);
		        buf.append("HR_BROKERS");
		        buf.append(delimiter);

				buf.append(counter[1]);
		        buf.append(delimiter);						        

		        buf.append("");
				//buf.append(delimiter);
		        buf.append(pdgf.util.Constants.DEFAULT_LINESEPARATOR);
		        
			//FEATURE: record total number of records per batch
	       	String key = tpc.di.TPC_DI_CONSTANTS.AUDIT.TOTAL_RECORDS_PER_BATCH.toString();
		    Object o = tpc.di.output.AuditPersistenceStore.instance().getStore().get(key);
	
		    java.util.List []  perBatchRecordCounters = (java.util.List []) o;
		    long RECORDS = counter[0].get();
		    perBatchRecordCounters[batchID-1].add(Long.valueOf(RECORDS));	
		    
			-->
		 </formaterTemplate>
		
		<!-- collect statistics -->
		<counterTemplate><!-- 
			
			//HR_RECORDS == counter[0];
			counter[0].incrementAndGet();
			
			//HR_BROKERS== counter[1];
			Object hr_jobcode = field[5].getValue();
			
			//Job code can be null
			if(hr_jobcode!=null){
					int jobCode = ((Number)hr_jobcode).intValue();
					if (jobCode == tpc.di.generators.HRJobIdGenerator.BROKER_JOB_ID) {
						counter[1].incrementAndGet();
					}
			}
			-->
		</counterTemplate>
	</output>
</include>